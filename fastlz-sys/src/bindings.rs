/* automatically generated by rust-bindgen */

pub const FASTLZ_VERSION: u32 = 256;
pub const FASTLZ_VERSION_MAJOR: u32 = 0;
pub const FASTLZ_VERSION_MINOR: u32 = 0;
pub const FASTLZ_VERSION_REVISION: u32 = 0;
pub const FASTLZ_VERSION_STRING: &'static [u8; 6usize] = b"0.1.0\0";
extern "C" {
    /// Compress a block of data in the input buffer and returns the size of
    /// compressed block. The size of input buffer is specified by length. The
    /// minimum input buffer size is 16.
    ///
    /// The output buffer must be at least 5% larger than the input buffer
    /// and can not be smaller than 66 bytes.
    ///
    /// If the input is not compressible, the return value might be larger than
    /// length (input buffer size).
    ///
    /// The input buffer and the output buffer can not overlap.
    pub fn fastlz_compress(
        input: *const ::std::os::raw::c_void,
        length: ::std::os::raw::c_int,
        output: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    /// Decompress a block of compressed data and returns the size of the
    /// decompressed block. If error occurs, e.g. the compressed data is
    /// corrupted or the output buffer is not large enough, then 0 (zero)
    /// will be returned instead.
    ///
    /// The input buffer and the output buffer can not overlap.
    ///
    /// Decompression is memory safe and guaranteed not to write the output buffer
    /// more than what is specified in maxout.
    pub fn fastlz_decompress(
        input: *const ::std::os::raw::c_void,
        length: ::std::os::raw::c_int,
        output: *mut ::std::os::raw::c_void,
        maxout: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    /// Compress a block of data in the input buffer and returns the size of
    /// compressed block. The size of input buffer is specified by length. The
    /// minimum input buffer size is 16.
    ///
    /// The output buffer must be at least 5% larger than the input buffer
    /// and can not be smaller than 66 bytes.
    ///
    /// If the input is not compressible, the return value might be larger than
    /// length (input buffer size).
    ///
    /// The input buffer and the output buffer can not overlap.
    ///
    /// Compression level can be specified in parameter level. At the moment,
    /// only level 1 and level 2 are supported.
    /// Level 1 is the fastest compression and generally useful for short data.
    /// Level 2 is slightly slower but it gives better compression ratio.
    ///
    /// Note that the compressed data, regardless of the level, can always be
    /// decompressed using the function fastlz_decompress above.
    pub fn fastlz_compress_level(
        level: ::std::os::raw::c_int,
        input: *const ::std::os::raw::c_void,
        length: ::std::os::raw::c_int,
        output: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
